play.application.loader = biz.lobachev.annette.service_catalog.server.ServiceCatalogServiceLoader
play.http.secret.key = ${?SECRET_KEY}
play.server.pidfile.path = "/dev/null"

akka.cluster.sharding.state-store-mode = ddata

indexing {
  connection {
    url = "https://localhost:9200"
    url = ${?INDEXING_URL}
    username = "admin"
    username = ${?INDEXING_USERNAME}
    password = "admin"
    password = ${?INDEXING_PASSWORD}
    allow-insecure = false
    allow-insecure = ${?INDEXING_ALLOW_INSECURE}
  }

  category-index {
    index = ${?INDEX_PREFIX}service-catalog-category
    index = ${?SERVICE_CATALOG_CATEGORY_INDEX}
    mappings {
      id {
        type = keyword
      }
      name {
        type = text
        fields {
          keyword {
            type = keyword
          }
        }
      }
      updatedAt {
        type = date
      }
    }
  }

  scope-index {
    index = ${?INDEX_PREFIX}service-catalog-scope
    index = ${?SERVICE_CATALOG_SCOPE_INDEX}
    mappings {
      id {
        type = keyword
      }
      name {
        type = text
        fields {
          keyword {
            type = keyword
          }
        }
      }
      description {
        type = text
      }
      categoryId {
        type = keyword
      }
      active {
        type = boolean
      }
      updatedAt {
        type = date
      }
    }
  }

  scope-principal-index {
    index = ${?INDEX_PREFIX}service-catalog-scope-principal
    index = ${?SERVICE_CATALOG_SCOPE_PRINCIPAL_INDEX}
    mappings {
      id {
        type = keyword
      }
      scopeId {
        type = keyword
      }
      principal {
        type = keyword
      }
      updatedAt {
        type = date
      }
    }
  }

  group-index {
    index = ${?INDEX_PREFIX}service-catalog-group
    index = ${?SERVICE_CATALOG_GROUP_INDEX}
    mappings {
      id {
        type = keyword
      }
      name {
        type = text
        fields {
          keyword {
            type = keyword
          }
        }
      }
      description {
        type = text
      }
      label {
        type = text
      }
      labelDescription {
        type = text
      }
      active {
        type = boolean
      }
      updatedAt {
        type = date
      }
    }
  }

  service-index {
    index = ${?INDEX_PREFIX}service-catalog-service
    index = ${?SERVICE_CATALOG_SERVICE_INDEX}
    mappings {
      id {
        type = keyword
      }
      name {
        type = text
        fields {
          keyword {
            type = keyword
          }
        }
      }
      description {
        type = text
      }
      label {
        type = text
      }
      labelDescription {
        type = text
      }
      active {
        type = boolean
      }
      updatedAt {
        type = date
      }
    }
  }

  service-principal-index {
    index = ${?INDEX_PREFIX}service-catalog-service-principal
    index = ${?SERVICE_CATALOG_SERVICE_PRINCIPAL_INDEX}
    mappings {
      id {
        type = keyword
      }
      serviceId {
        type = keyword
      }
      principal {
        type = keyword
      }
      updatedAt {
        type = date
      }
    }
  }
}

cassandra.default {
  ## list the contact points here
  contact-points = "localhost:9042"
  contact-points = ${?CASSANDRA_URL}
  ## keyspace name
  keyspace = ${?KEYSPACE_PREFIX}service_catalog
  keyspace = ${?KEYSPACE}
  ## authentication
  authentication {
    username = "cassandra"
    username = ${?CASSANDRA_USERNAME}
    password = "cassandra"
    password = ${?CASSANDRA_PASSWORD}
  }

  ## override Lagomâ€™s ServiceLocator-based ConfigSessionProvider
  session-provider = akka.persistence.cassandra.ConfigSessionProvider
  replication-factor = ${?CASSANDRA_REPLICATION_FACTOR}
}

cassandra-journal = ${cassandra.default}
cassandra-snapshot-store = ${cassandra.default}

cassandra-journal.events-by-tag.flush-interval = 100ms
cassandra-journal.events-by-tag.flush-interval = ${?FLUSH_INTERVAL}
cassandra-query-journal.events-by-tag.eventual-consistency-delay = 100ms
cassandra-query-journal.events-by-tag.eventual-consistency-delay = ${?EVENTUAL_CONSISTENCY_DELAY}
cassandra-query-journal.delayed-event-timeout = 30s
cassandra-query-journal.delayed-event-timeout = ${?DELAYED_EVENT_TIMEOUT}
cassandra-query-journal.refresh-interval = 100ms
cassandra-query-journal.refresh-interval = ${?REFRESH_INTERVAL}
cassandra-query-journal.first-time-bucket = "20211201T00:00"
cassandra-query-journal.first-time-bucket = ${?FIRST_TIME_BUCKET}
cassandra-journal.pubsub-minimum-interval = 200ms
cassandra-journal.pubsub-minimum-interval = ${?PUBSUB_MIN_INTERVAL}

lagom.persistence {
  read-side.cassandra = ${cassandra.default}
  snapshot-after = 100
  passivate-after-idle-timeout = 300s
}


