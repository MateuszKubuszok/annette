indexing {
  connection {
    url = "https://localhost:9200"
    url = ${?ELASTIC_URL}
    username = "admin"
    username = ${?ELASTIC_USERNAME}
    password = "admin"
    password = ${?ELASTIC_PASSWORD}
    allowInsecure = false
    allowInsecure = ${?ELASTIC_ALLOW_INSECURE}
  }

  person-category-index = {
    index = ${?ELASTIC_PREFIX}person-category
    index = ${?PERSON_CATEGORY_INDEX}
    mappings = {

      id = {
        type = keyword
        field = id
      }

      name = {
        type = text
        field = name
        fielddata = true
        analyzer = name_analyzer
        search-analyzer = standard
        fields {
          english {
            field = english
            type = text
            analyzer = english
          }
          keyword {
            type = keyword
          }
        }
      }

      updatedAt = {
        type = date
        field = updatedAt
      }

    }

    analyzers = {
      name_analyzer {
        type: custom
        tokenizer = name_tokenizer
        char-filters = ["filter"],
        token-filters = ["lowercase"]
      }
      stop {
        type = stop
        stopwords = ["and", "or", "not"]
      }
      fingerprint {
        type = fingerprint
        separator = ","
        stopwords = ["and", "or", "not"]
        max-output-size = 100
      }
      pattern {
        type = pattern
        regex = "regex",
        lowercase = false
      }
    }

    tokenizers = {
      UaxUrlEmail {
        type = uax-url-email
        max-token-length = 100
      }

      CharGroup {
        type = char-group
        tokenize-on-chars =[ "q", "w", "e"]
      }

      Standard {
        type = standard
        max-token-length = 100
      }

      Pattern {
        type = pattern
        pattern = "pattern"
        flags: "f"
        group: 10
      }

      Keyword {
        type = keyword
        buffer-size = 256
      }

      NGram {
        type = n-gram
        min-gram = 3
        max-gram = 30,
        token-chars = [ "a", "b", "d"]
      }

      EdgeNGram {
        type = edge-n-gram
        min-gram = 2
        max-gram = 50,
        token-chars = [ "a", "b", "C"]
      }

      PathHierarchy {
        type = path-hierarchy
        delimiter = "-"
        replacement = "+"
        buffer-size = 100
        reverse = false,
        skip = 0
      }

      Whitespace {
        type = whitespace
        max-token-length = 50
      }

      Classic {
        type = classic
        max-token-length = 30
      }

      Thai {
        type = thai
      }

      ICU {
        type = icu
        rule-files = "asdf"
      }
    }
  }

  duplicated-fields = {
    index = duplicated-fields
    mappings = {

      id = {
        type = keyword
        field = id
      }

      name = {
        type = text
        field = name
      }

      duplicatedName = {
        type = text
        field = name
      }

      duplicated1 = {
        type = text
      }

      duplicated2 = {
        type = text
        field = duplicated1
      }

    }
  }
}

failConnection {
}
